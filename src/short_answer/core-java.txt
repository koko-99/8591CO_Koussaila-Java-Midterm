***ANSWER ALL OF THE QUESTIONS BELOW***

What is a programming language?
Answer: A programming language is a vocabulary and set of grammatical rules for instructing a computer or computing
device to perform specific tasks.
The term programming language usually refers to high-level languages, such as BASIC, C, C++, COBOL, Java, FORTRAN, Ada, and Pascal.

What is a JDK composed of? Define each components?
Answer: JDK composed of JRE and JVM
JRE: Java Runtime Environment is the implementation of JVM(Java Virtual Machine) and it is specially designed to
execute Java programs
JVM: Java Virtual Machine  loads, verifies and executes Java bytecode. It is known as the interpreter or the core
 of Java programming language because it executes Java programming

What is an IDE?
Answer: (Integrated Development Environment) is a software application that enables users to write and debug Java
 programs more easily and provides considerable support for the application development process.

What are some of the most popular Java IDEs available in the market?
Answer: IntelliJ IDEA, Eclipse, NetBeans, BlueJ, JDeveloper

Explain the entire java life cycle.
Answer: First, we will start with typing the program in a text-editor and save the file with as .java.
Second we need to compile the file with Java Compiler (javac) and it turns is to bytecode and saves it
in a file .class. Last step is execution. The bytecode generated by the compiler will be executed by JVM.
Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine

What is a class?
Answer: is a template used to create objects and to define object data types and methods (like a blueprint).

What is an object?
Answer:A Java object is  an instance of a Java class. Each object has an identity, a behavior and a state.
The state of an object is stored in fields (variables), while methods (functions) display the object's behavior.
 Objects are created at runtime from templates, which are also known as classes.

What is the entry point of a Java project?
Answer: A Java entry-point class has a main method which is : public static void main(String[] args){}

Why is the main() method static?
Answer: so that JVM can invoke it without instantiating the class. This also saves the unnecessary wastage
of memory which would have been used by the object declared only for calling the main() method by the JVM

Which class is the superclass of all classes?
Answer: Object class.

What is difference between path and classpath variables?
Answer: The path points to the location of the jre i.e. the java binary files such as the jvm and necessary libraries.
 The classpath points to the classes we developed so that the jvm can find them and load them when we run our product.

What is the difference between an Interface and Abstract class?
Answer:An abstract class allows you to create functionality that subclasses can implement or override.
An interface only allows you to define functionality, not implement it

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: We cannot create objects of an abstract class nor interface so in order to implement features of
an abstract class, we inherit subclasses from it and create objects of the subclass.
A subclass must override all abstract methods of an abstract class and since interface methods don't have a body
we implement the class which provides the body.

What is Access Modifier?
Answer:Access modifiers are object-oriented programming that is used to set the accessibility of classes,
constructors, methods, and other members of Java.
Using the access modifiers we can set the scope or accessibility of these classes, methods, constructors, and other members.

What is OOP? Define each OOP concept.
Answer: Object-oriented programming (OOP) is a computer programming model that organizes software design around data,
or objects, rather than functions and logic. An object can be defined as a data field that has unique attributes and behavior.
      - Inheritance: is a concept that acquires the properties from one class to other classes
      - Encapsulation: is the inclusion of all methods and variables needed for a Java object to function,
      contained within the object itself, and we use getters and setters to interact with methods and variables.
      - Abstraction: is the process of hiding certain details and showing only essential information to the user.
      - Polymorphism: "many forms", and it occurs when we have many classes that are related to each other by inheritance
What is Java Package and which package is imported by default?
Answer: A package is a namespace that organizes a set of related classes and interfaces.
        java.lang package is the package that is imported by default.
What is an API? List some API's that you have used so far.
Answer: APIs are mechanisms that enable two software components to communicate with each other using a set of definitions and protocols
        Apache poi api, mySql api, JDBC api

Does java support multiple inheritance? Why or why not?
Answer: java does not support multiple inheritance because if you call the demo() method using the object of
the subclass, compiler faces an ambiguous situation not knowing which method to call. This issue is known as diamond problem.

What is method overloading? List all of the different ways to overload.
Answer:  is known as Compile-time Polymorphism, it allows different methods to have the same name, but different
signatures where the signature can differ, and we can  overload by putting different datatype parameters
or different number of parameters and the order as well.

Explain exceptions in java and how to handle them.
Answer: An exception is an event, which occurs during the execution of a program, that disrupts the normal flow
of the program's instructions. we can handle them by try-catch (we put the code we want to handle inside try block,
and catch any Java exceptions that the code throws are caught by one or more catch blocks)

What is static keyword? When and how do we use it?
Answer: The static keyword is a non-access modifier used for methods and attributes. Static methods/attributes can
be accessed without creating an object of a class, and it is used to efficiently manage memory and ability
to access variables and methods without creating an object.

What is final keyword? When and how do we use it?
Answer: is a non-access modifier used for classes, attributes and methods, which makes them non-changeable  and
is used to restrict the user.

Explain the difference between final, finally and finalize?
Answer: final is an access modifier, finally is the block in Exception Handling and the code inside it will execute
no matter what and finalize is the method of object class.

What is a constructor?
Answer:A constructor is a special method of a class  that initializes a newly created object of that type.
Whenever an object is created, the constructor is called automatically

Can we have multiple constructors in a class?
Answer: A class can have multiple constructors

If we don't have a constructor declared, what is called during the object creation?
Answer: The default constructor.

What is "this" keyword in Java? When would we use it?
Answer: "this" keyword refers to the current object in a method or constructor
        we use "this" keyword to eliminate the confusion between class attributes and parameters with the same name

What is "super" keyword in Java? What are some scenarios we would use it?
Answer: The "super" keyword refers to superclass (parent) objects
        We use it to  call superclass methods, and to access the superclass constructor.

What does JVM stand for?
Answer: Java Virtual Machine

Is JVM platform independent?
Answer: JVM is dependant because it depends on the operating system (windows , macos, linux)

What version of Java are you using?
Answer: 17

What does JAR stand for?
Answer: Java ARchive.

What is the difference between JDK and JVM?
Answer:  The JDK is a software development kit that develops applications in Java
         JVM is a component of JDK that loads, verifies and executes Java bytecode

What is the difference between JVM and JRE?
Answer: JRE identifies all the helpful class libraries needed for execution, while JVM is a subclass of JRE that
decodes the bytecode into machine language and other minor tasks

Explain the difference between compile-time and run-time?
Answer: Compile time is the period when the programming code is converted to the machine code
        Runtime is the period of time when a program is running and generally occurs after compile time.

What is heap?
Answer: The Java heap is the area of memory used to store objects instantiated by applications running on the JVM.

How does Java manage its memory?
Answer: Java uses an automatic memory management system called a garbage collector

What is the difference between String, StringBuffer and StringBuilder?
Answer: String is immutable whereas StringBuffer and StringBuilder are mutable classes.

What is Singleton class?
Answer: a singleton class is a class that can have only one object at a time. After the first time, if we try to
instantiate the Singleton class, the new variable also points to the first instance created

What is Serialization and Deserialization?
Answer: Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the
reverse process where the byte stream is used to recreate the actual Java object in memory

Explain the difference between While and Do..While loops?
Answer: While loop checks the condition first and then executes the statement, whereas do while loop will execute
the statement at least once, then the condition is checked

What is Enum?
Answer: An enum type is a special data type that enables for a variable to be a set of predefined constants.

What is Iterator?
Answer: An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.

Which one will take more memory: an int or Integer? Why?
Answer: int is a primitive data type and takes 32 bits(4 bytes) to store. Integer is an object which takes
128 bits (16 bytes) to store its int value.

Why are Strings considered to be immutable in Java?
Answer: because of the security, synchronization and concurrency, caching, and class loading.

What is constructor chaining in Java?
Answer: Constructor chaining is the process of calling a sequence of constructors we can use 'this()' for
chaining if it is in the same class or 'super()'  for chaining constructors from the parent class.

The difference between Serial and Parallel Garbage Collector?
Answer: the parallel collector has multiple threads that are used to speed up garbage collection. Unlike serial.

What does JIT stands for?
Answer: Just-In-Time

Explain the process of Java garbage collection?
Answer: Java garbage collection is the process by which Java programs perform automatic memory management.
Java programs compile to bytecode that can be run on JVM. When Java programs run on the JVM, objects are created
on the heap, which is a portion of memory dedicated to the program.

Can you guarantee the garbage collection process?
Answer: No, Garbage collection does not guarantee that a program will not run out of memory

What is the difference between stack and heap in Java?
Answer: Heap Space is used throughout the application, but Stack is only used for the method
        Heap Space contains all objects are created, but Stack contains any reference to those objects.

What is reflection in Java and why is it useful?
Answer: reflection is a very useful approach to deal with the Java class at runtime. it can be used
to load the Java class, call its methods or analysis the class at runtime. It's useful in a lot of situations.
 Everywhere you want to be able to dynamically plug in classes into your code. Lots of object relational mappers
 use reflection to be able to instantiate objects from databases without knowing in advance what objects
 they're going to use.

What is multithreading in Java?
Answer: Multithreading refers to a process of executing two or more threads simultaneously for maximum
utilization of the CPU.

What is synchronization in Java?
Answer: the synchronization is a mechanism in order to control the access of multiple threads which
are trying to access the common shared resources.
What is a Framework?
Answer: Framework is the body or platform of pre-written
codes used by Java developers to develop Java applications or web applications.

What are the testing Frameworks available in Java?
Answer:
JUnit, TestNG, HttpUnit, JwebUnit, Apache JMeter, Selenium, Serenity
What are jUnit and testNG?
Answer:
jUnit: is a unit testing and is used to test the behavior of methods inside classes we have written.
testNG:TestNG is an automation testing framework in which NG stands for
“Next Generation”. TestNG is inspired by JUnit and overcomes the disadvantages of it
and is designed to make end-to-end testing easy.

What are the dependencies for this project?
Answer: we have jackson, json, mongo, mysql, protobuf, testNG.

What is dependency injection in Java?
Answer:dependency injection is a design pattern in which an object or function receives other objects or
functions that it depends on.

Explain what static binding and dynamic binding is?
Answer:Binding means connect or link between a method call to the method definition, and this could be done
either at the compile time or the run time.
1)static Binding:refers to the execution of a program where the type of Object is determined at compile time
also known as Early Binding.
2)Dynamic Binding: means binding which resolves during run time based on the type of the object, and known as
late Binding.
The best example here is the Method Overriding where the type of the object determines which method is going
to be executed.